// Generated by CoffeeScript 1.12.3
(function() {
  var BucketViewerController,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  BucketViewerController = (function() {
    function BucketViewerController(S3) {
      this.refresh = bind(this.refresh, this);
      this.open = bind(this.open, this);
      this.prefix = '';
      this.bucketName = 's3-bucket-viewer-demo';
      this.s3 = S3;
      this.refresh();
    }

    BucketViewerController.prototype.open = function(prefix) {
      this.prefix = this.prefix + prefix;
      return this.refresh();
    };

    BucketViewerController.prototype.refresh = function() {
      console.log("checking for bucket " + this.bucketName + " with prefix " + this.prefix);
      return this.s3.list(this.bucketName, this.prefix).then((function(_this) {
        return function(data) {
          return _this.files = data.map(function(el) {
            el.Key = el.Key.substr(_this.prefix.length);
            return el;
          }).map(function(el) {
            if (el.Key.indexOf('/') > -1) {
              el.type = 'folder';
              el.Key = el.Key.substr(0, el.Key.indexOf('/') + 1);
            } else {
              el.type = 'file';
              el.Key = el.Key.substr(el.Key.lastIndexOf('/') + 1);
            }
            el.url = _this.s3.downloadLink(_this.bucketName, el.Key);
            return el;
          }).reduce(function(a, b) {
            if (a.map(function(el) {
              return el.Key;
            }).indexOf(b.Key) < 0) {
              a.push(b);
            }
            return a;
          }, []);
        };
      })(this));
    };

    return BucketViewerController;

  })();

  angular.module('DemoApp').component('bucketViewer', {
    templateUrl: 'components/bucket-viewer.template.html',
    controller: ['S3', BucketViewerController]
  });

}).call(this);
