// Generated by CoffeeScript 1.12.3
(function() {
  var BucketViewerController,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  BucketViewerController = (function() {
    function BucketViewerController(S3, $scope) {
      this.refresh = bind(this.refresh, this);
      this.updateFiles = bind(this.updateFiles, this);
      this.bucketNamesList = bind(this.bucketNamesList, this);
      this.prefix = bind(this.prefix, this);
      this.close = bind(this.close, this);
      this.open = bind(this.open, this);
      this.home = bind(this.home, this);
      this.$onInit = bind(this.$onInit, this);
      this.scope = $scope;
      this.s3 = S3;
      this.currentPrefix = '';
    }

    BucketViewerController.prototype.$onInit = function() {
      return this.refresh();
    };

    BucketViewerController.prototype.home = function() {
      this.currentPrefix = '';
      return this.refresh();
    };

    BucketViewerController.prototype.open = function(prefix) {
      this.currentPrefix = this.currentPrefix + prefix;
      return this.refresh();
    };

    BucketViewerController.prototype.close = function() {
      if (this.currentPrefix.slice(-1) === '/') {
        this.currentPrefix = this.currentPrefix.slice(0, -1);
      }
      this.currentPrefix = this.currentPrefix.substr(0, this.currentPrefix.lastIndexOf('/') + 1);
      return this.refresh();
    };

    BucketViewerController.prototype.prefix = function() {
      return this.basePrefix + this.currentPrefix;
    };

    BucketViewerController.prototype.bucketNamesList = function() {
      return this.bucketNames.trim().replace(' ', '').split(',');
    };

    BucketViewerController.prototype.updateFiles = function(newFiles) {
      this.files = newFiles;
      return this.scope.$digest();
    };

    BucketViewerController.prototype.refresh = function() {
      return Promise.all(this.bucketNamesList().map((function(_this) {
        return function(bucketName) {
          return _this.s3.list(bucketName, _this.prefix());
        };
      })(this))).then((function(_this) {
        return function(lists) {
          return lists.reduce(function(arr, val) {
            return arr.concat(val);
          }, []);
        };
      })(this)).then((function(_this) {
        return function(data) {
          return data.map(function(el) {
            el.Key = el.Key.substr(_this.prefix().length);
            return el;
          }).map(function(el) {
            if (el.Key.indexOf('/') > -1) {
              el.type = 'folder';
              el.Key = el.Key.substr(0, el.Key.indexOf('/') + 1);
            } else {
              el.type = 'file';
              el.Key = el.Key.substr(el.Key.lastIndexOf('/') + 1);
            }
            el.url = "about:home";
            return el;
          }).reduce(function(a, b) {
            if (a.map(function(el) {
              return el.Key;
            }).indexOf(b.Key) < 0) {
              a.push(b);
            }
            return a;
          }, []);
        };
      })(this)).then(this.updateFiles);
    };

    return BucketViewerController;

  })();

  angular.module('DemoApp').component('bucketViewer', {
    templateUrl: 'components/bucket-viewer.template.html',
    controller: ['S3', '$scope', BucketViewerController],
    bindings: {
      bucketNames: '@',
      basePrefix: '@'
    }
  });

}).call(this);
