// Generated by CoffeeScript 1.12.3
(function() {
  var S3Client, s3Client;

  S3Client = (function() {
    function S3Client() {
      AWS.config.region = 'eu-central-1';
      AWS.config.credentials = new AWS.CognitoIdentityCredentials({
        IdentityPoolId: 'eu-central-1:68658909-d15f-4579-a7cb-b1d61670e7ce'
      });
      this.s3 = new AWS.S3();
    }

    S3Client.prototype.client = function() {
      return this.s3;
    };

    return S3Client;

  })();

  s3Client = new S3Client().client();

  angular.module('DemoApp').factory('S3', [
    function() {
      return {
        list: function(bucketName, prefix) {
          console.log("ListObjects on S3 API with bucket " + (JSON.stringify(bucketName)) + " and prefix " + (JSON.stringify(prefix)));
          return new Promise(function(resolve, reject) {
            return s3Client.listObjects({
              Bucket: bucketName,
              Prefix: prefix
            }, function(err, data) {
              if (err != null) {
                console.log("[S3Client] error while fetching object list: " + (JSON.stringify(err)));
                return reject(err);
              } else {
                return resolve(data.Contents);
              }
            });
          });
        },
        downloadLink: function(bucketName, objectName) {
          return new Promise(function(resolve, reject) {
            return s3Client.getSignedUrl('getObject', {
              Bucket: bucketName,
              Key: objectName,
              Expires: 300
            }, function(err, data) {
              if (err != null) {
                console.log("[S3Client] error while fetching download link: " + (JSON.stringify(err)));
                return reject(err);
              } else {
                return resolve(data);
              }
            });
          });
        }
      };
    }
  ]);

}).call(this);
